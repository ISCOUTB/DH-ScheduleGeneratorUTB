# Servidor para redirigir HTTP a HTTPS
server {
    listen 80;
    server_name horario.lab.utb.edu.co;

    # Manejo del reto de Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirige todo el resto del tráfico a HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Servidor principal para HTTPS
server {
    listen 443 ssl;
    http2 on;
    server_name horario.lab.utb.edu.co;

    # Rutas a los certificados SSL
    ssl_certificate /etc/letsencrypt/live/horario.lab.utb.edu.co/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/horario.lab.utb.edu.co/privkey.pem;
    
    # Opciones de seguridad SSL recomendadas
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_prefer_server_ciphers off;

    # Sirve los archivos estáticos de la aplicación Flutter.
    location / {
        root   /usr/share/nginx/html;
        index  index.html;
        try_files $uri $uri/ /index.html;
    }

    # Proxy para la API
    location /api/ {
        # Usar el resolver interno de Docker y establecer un tiempo de validez.
        # 127.0.0.11 es el resolver DNS embebido de Docker.
        resolver 127.0.0.11 valid=10s;
        set $backend_host "api:8000";
        proxy_pass http://$backend_host;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Manejo de errores explícito
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}